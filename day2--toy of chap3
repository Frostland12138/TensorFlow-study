code and output:
>>> import numpy as np
>>> np.zeros((2,2))
array([[ 0.,  0.],
       [ 0.,  0.]])
>>> np.eye(3)
array([[ 1.,  0.,  0.],
       [ 0.,  1.,  0.],
       [ 0.,  0.,  1.]])
>>> N = 100
>>> w_true = 5
>>> b_true = 2
>>> noise_scale = .1
>>> x_np = np.random.rand(N, 1)
>>> noise = np.random.normal(scale=noise_scale, size=(N, 1))
>>> # Convert shape of y_np to (N,)
... y_np = np.reshape(w_true * x_np + b_true + noise, (-1))
>>> 
[4]+  Stopped                 python

	.file	"main.c"
	.text
	.globl	x
	.data
	.align 4
	.type	x, @object
	.size	x, 4
x:
	.long	3
	.section	.rodata
.LC0:
	.string	"x = %d"
	.text
	.globl	main
	.type	main, @function
main:
.LFB0:
	.cfi_startproc
	pushq	%rbp
	.cfi_def_cfa_offset 16
	.cfi_offset 6, -16
	movq	%rsp, %rbp
	.cfi_def_cfa_register 6
	subq	$16, %rsp
	movl	$5, -4(%rbp)
	movl	-4(%rbp), %eax
	movl	%eax, %esi
	leaq	.LC0(%rip), %rdi
	movl	$0, %eax
	call	printf@PLT
	movl	$0, %eax
	leave
	.cfi_def_cfa 7, 8
	ret
	.cfi_endproc
.LFE0:
	.size	main, .-main
	.ident	"GCC: (Debian 7.3.0-11) 7.3.0"
	.section	.note.GNU-stack,"",@progbits
